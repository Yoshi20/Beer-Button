- @page_title = t('devices.title')

.grid
  .s12
    %p= t('devices.total_count') + " = #{@devices.count}"

.device-list
  %table.table.table-hover
    %thead.table-header
      %tr
        %th= t('activerecord.attributes.device.name')
        %th.m.l= t('activerecord.attributes.device.dev_eui')
        -# %th= t('activerecord.attributes.device.app_eui')
        -# %th= t('activerecord.attributes.device.app_key')
        -# %th= t('activerecord.attributes.device.hw_version')
        -# %th= t('activerecord.attributes.device.fw_version')
        %th.center-align= t('activerecord.attributes.device.battery') + ' [%]'
        %th.center-align= t('activerecord.attributes.device.last_time_seen')
        -# %th.center-align Created at
        %th= t('actions')

    %tbody.device-list-body.with-show
      - now = DateTime.now.to_i
      - @devices.each do |device|
        %tr{'data-id': device.id, 'data-component'=>'device'}
          %td= device.name
          %td.m.l= device.dev_eui
          -# %td= device.app_eui
          -# %td= device.app_key
          -# %td= device.hw_version
          -# %td= device.fw_version
          %td.center-align{style: "color: #{device.battery.to_i <= 20 ? 'red' : ''};"}= device.battery
          - dt = now - device.last_time_seen.to_i
          %td.center-align{style: "color: #{dt > (3600*24+30) ? 'red' : ''};"}= device.last_time_seen.localtime.to_fs(:custom_datetime) if device.last_time_seen.present?
          -# %td.center-align= device.created_at.localtime.to_fs(:custom_datetime)
          %td.admin-list-actions{style: 'display: flex;'}
            - if @devise_current_user.admin?
              .admin-list-actions__link
                = link_to device, data: { turbo_method: :get } do
                  = button_tag class: 'small square', style:'margin: 0 0 0 5px;' do
                    %i.material-icons.admin-actions__link__icon= 'visibility'
            .admin-list-actions__link
              = link_to edit_device_path(device), data: { turbo_method: :get } do
                = button_tag class: 'small square', style:'margin: 0 0 0 5px;' do
                  %i.material-icons.admin-actions__link__icon= 'edit'
            - if @devise_current_user.admin?
              .admin-list-actions__link
                = button_to device_path(device), method: :delete, form: { data: { turbo_method: :delete, turbo_confirm: t('are_you_sure') } }, class: 'small square', style:'margin: 0 0 0 5px;' do
                  %i.material-icons.admin-actions__link__icon= 'delete'

  - if @devise_current_user.admin?
    .admin-actions
      .admin-actions__link
        = button_to new_device_path, class:'border small square', method: :get do
          %i.material-icons.admin-actions__link__icon= 'add'



    .s12
      .center-align
        = image_tag 'blup.png', width: '10%', alt: 'QR image', id: 'myQR'


      -# %video#video{:controls => "", :height => "240", :width => "320"}
      -# %span#result

      #reader{width:"200px"}


:javascript
  // check compatibility
  if (!("BarcodeDetector" in globalThis)) {
    console.log("Barcode Detector is not supported by this browser.");
  } else {
    console.log("Barcode Detector supported!");






    // // create new detector
    // const barcodeDetector = new BarcodeDetector({
    //   formats: ["qr_code"],
    // });
    //
    // // get supported formats
    // // BarcodeDetector.getSupportedFormats().then((supportedFormats) => {
    // //   supportedFormats.forEach((format) => console.log(format));
    // // });
    //
    // // get QR code image
    // const imageEl = document.getElementById('myQR');
    // console.log(imageEl); // image can be an element, Blob, ImageData, or CanvasImageSource
    // // const img1 = new Image(); // Image constructor
    // // img1.src = imageEl.src;
    //
    // // detect content of the QR code image
    // barcodeDetector
    //   .detect(imageEl)
    //   .then((barcodes) => {
    //     console.log('blup:');
    //     barcodes.forEach((barcode) => console.log(barcode.rawValue));
    //   })
    //   .catch((err) => {
    //     console.log(err);
    //   });
  }
